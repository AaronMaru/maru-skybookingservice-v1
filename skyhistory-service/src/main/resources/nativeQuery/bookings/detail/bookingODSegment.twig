SELECT
    bod_seg.id,
    IFNULL(bod_seg.elapsed_time, 0) AS elapsedTime,
    bod_seg.airline_code AS airlineCode,
    (
        SELECT fil.business_name
        FROM flight_info_locale fil
        WHERE fil.locale_id = :localeId
        AND fil.flight_id = (
                    SELECT fi.id
                    FROM flight_info fi
                    WHERE fi.airline_code = bod_seg.airline_code
                )
        LIMIT 1
    ) AS airlineName,
    CASE WHEN bod_seg.airline_code IS NOT NULL THEN
         CONCAT(:IMAGE_URL,'90/',LOWER(bod_seg.airline_code),'.png' )
        ELSE ''
    END  AS airlineLogo,
    bod_seg.flight_number AS flightNumber,
    bod_seg.equip_type AS equipType,
    (
        SELECT ail.name
        FROM aircraft_locale ail
        WHERE ail.locale_id = 1
        AND ail.aircraft_id = (
                SELECT aci.id
                FROM aircrafts_info AS aci
                WHERE aci.aircraft_code = bod_seg.equip_type
            )
        LIMIT 1
    ) AS aircraftName,
    bod_seg.meal,
    (SELECT m.meal_name FROM meals AS m WHERE m.meal_code = bod_seg.meal LIMIT 1) AS mealName,
    bod_seg.stop_qty AS stopQty,
    bod_seg.layover,
    IFNULL( SUBSTRING_INDEX(bod_seg.airline_ref, '*', -1), '') AS airlineRef,
    CASE WHEN bod_seg.operated_by_code IS NOT NULL
         THEN ( SELECT fil.name
                FROM flight_info_locale fil
                WHERE fil.locale_id = :localeId
                AND fil.flight_id = (SELECT fi.id FROM flight_info fi WHERE fi.airline_code = bod_seg.operated_by_code )
                LIMIT 1)
         ELSE ''
    END AS operatedByAirline,

    bod_seg.adjustment_date AS adjustmentDate,
    bod_seg.dep_location_code AS departureLocationCode,
    dep_air.departureAirportName,
    dep_air.departureLatitude,
    dep_air.departureLongitude,
    departureInfo.dep_city AS departureCity,
    departureInfo.dep_country AS departureCountry,
    bod_seg.dep_terminal AS departureTerminal,
    bod_seg.dep_date AS departureDate,

    bod_seg.arr_location_code AS arrivalLocationCode,
    arrival_air.arrivalAirportName,
    arrival_air.arrivalLatitude,
    arrival_air.arrivalLongitude,
    arrivalInfo.arr_city AS arrivalCity,
    arrivalInfo.arr_country AS arrivalCountry,
    bod_seg.arr_terminal AS arrivalTerminal,
    bod_seg.arr_date AS arrivalDate,
    CASE WHEN ( ( DATE(
                -- Flight depature datetime and convert to UTC
                CONVERT_TZ(bod_seg.dep_date, CONCAT( CASE WHEN bod_seg.dep_timezone >= 0 THEN

                                          CASE WHEN LENGTH(bod_seg.dep_timezone) >= 3 THEN
                                              CONCAT('+', SUBSTRING(bod_seg.dep_timezone,1,1), ':', SUBSTRING(bod_seg.dep_timezone,2,2))
                                          ELSE
                                              CONCAT('+', bod_seg.dep_timezone,':00')
                                          END

                                    ELSE CONCAT(bod_seg.dep_timezone,':00') END ), '+00:00')
            ) >= DATE(
                -- User locale current time zone and convert to UTC
                CONVERT_TZ(CURRENT_TIMESTAMP, CONCAT( CASE WHEN bod_seg.dep_timezone >= 0 THEN
                                            CASE WHEN LENGTH(bod_seg.dep_timezone) >= 3 THEN
                                              CONCAT('+', SUBSTRING(bod_seg.dep_timezone, 1, 1), ':', SUBSTRING(bod_seg.dep_timezone,2,2))
                                            ELSE
                                              CONCAT('+', bod_seg.dep_timezone,':00')
                                           END
                      ELSE CONCAT(bod_seg.dep_timezone,':00') END ), '+00:00')
            ) ) > 0

        ) THEN :UPCOMING

    WHEN ( ( DATE(
                    -- Flight depature datetime and convert to UTC
                    CONVERT_TZ(bod_seg.dep_date, CONCAT( CASE WHEN bod_seg.dep_timezone >= 0 THEN

                                          CASE WHEN LENGTH(bod_seg.dep_timezone) >= 3 THEN
                                              CONCAT('+', SUBSTRING(bod_seg.dep_timezone,1,1), ':', SUBSTRING(bod_seg.dep_timezone,2,2))
                                          ELSE
                                              CONCAT('+', bod_seg.dep_timezone,':00')
                                          END

                            ELSE CONCAT(bod_seg.dep_timezone,':00') END ), '+00:00')
                ) < DATE(
                    -- User locale current time zone and convert to UTC
                    CONVERT_TZ(CURRENT_TIMESTAMP, CONCAT( CASE WHEN bod_seg.dep_timezone >= 0 THEN
                                CASE WHEN LENGTH(bod_seg.dep_timezone) >= 3 THEN
                                              CONCAT('+', SUBSTRING(bod_seg.dep_timezone,1,1), ':', SUBSTRING(bod_seg.dep_timezone,2,2))
                                          ELSE
                                              CONCAT('+', bod_seg.dep_timezone,':00')
                                          END
                            ELSE CONCAT(bod_seg.dep_timezone,':00') END ), '+00:00')
                ) ) > 0

        ) THEN :COMPLETED

    END AS status


FROM booking_origin_destinations bod_seg

-- DepartureRS city and country
LEFT JOIN
(
    SELECT
        dep_air.code,
        dep_air.id,
        ( SELECT cclo.name
            FROM airport_info_locale AS cclo
            WHERE cclo.locale_id = :localeId
            AND cclo.airport_info_id = dep_air.id
        ) AS departureAirportName,
        dep_air.latitude AS departureLatitude,
        dep_air.longitude AS departureLongitude

    FROM airport_info AS dep_air
) dep_air ON dep_air.code = bod_seg.dep_location_code

LEFT JOIN
(
    SELECT departureInfo.`code`, cc_city.dep_city, cc_city.dep_country
    FROM airport_info AS departureInfo

    INNER JOIN(
            SELECT
            cc_city.id,
            ( SELECT cc_lcity.`name`
                FROM country_city_locale cc_lcity
                WHERE cc_lcity.locale_id = :localeId
                AND cc_lcity.country_city_id = cc_city.id
            ) AS dep_city,
            (
                SELECT cc_lcountry.`name`
                FROM country_city_locale AS cc_lcountry
                WHERE cc_lcountry.locale_id = :localeId
                AND cc_lcountry.country_city_id = ( SELECT cc_county.id
                                                    FROM country_city AS cc_county
                                                    WHERE cc_county.id = cc_city.parent_id
                                                    AND cc_county.type = 'country'
                                                    )
            ) AS dep_country

            FROM country_city AS cc_city

    ) cc_city ON cc_city.id = departureInfo.country_city_id

) departureInfo ON departureInfo.`code` = bod_seg.dep_location_code
-- The end of departure


-- ArrivalRS city and country
LEFT JOIN
(
    SELECT
        arrival_air.code,
        arrival_air.id,
        ( SELECT cclo.name
            FROM airport_info_locale AS cclo
            WHERE cclo.locale_id = :localeId
            AND cclo.airport_info_id = arrival_air.id
        ) AS arrivalAirportName,
        arrival_air.latitude AS arrivalLatitude,
        arrival_air.longitude AS arrivalLongitude

    FROM airport_info AS arrival_air

) arrival_air ON arrival_air.code = bod_seg.arr_location_code

LEFT JOIN
(   SELECT arrivalInfo.`code`, cc_city.arr_city, cc_city.arr_country
    FROM airport_info AS arrivalInfo

    INNER JOIN(
            SELECT
            cc_city.id,
            ( SELECT cc_lcity.`name` AS dep_city
                FROM country_city_locale cc_lcity
                WHERE cc_lcity.locale_id = :localeId
                AND cc_lcity.country_city_id = cc_city.id
            ) AS arr_city,
            (
                SELECT cc_lcountry.`name`
                FROM country_city_locale AS cc_lcountry
                WHERE cc_lcountry.locale_id = :localeId
                AND cc_lcountry.country_city_id = ( SELECT cc_county.id
                                                    FROM country_city AS cc_county
                                                    WHERE cc_county.id = cc_city.parent_id
                                                    AND cc_county.type = 'country'
                                                    )
            ) AS arr_country

            FROM country_city AS cc_city

    ) cc_city ON cc_city.id = arrivalInfo.country_city_id

) arrivalInfo ON arrivalInfo.`code` = bod_seg.arr_location_code
-- The end of arrival

WHERE bod_seg.parent_id = :bodId