SELECT
    b.id AS bookingId,
    b.booking_code AS bookingCode,
    b.itinerary_ref AS prnCode,
    CASE
    WHEN b.trip_type = 'OneWay' THEN :ONEWAY
    WHEN b.trip_type = 'Return' THEN :ROUND
    WHEN b.trip_type = 'Other' THEN :MULTICITY
    END AS tripType,
    b.currency_code AS currencyCode,
    CONCAT(su.first_name,' ',su.last_name) AS bookedBy,
    bod.className,
    ( SELECT SUM(`pass_qty`) FROM booking_travel_itineraries AS bti WHERE bti.booking_id = b.id) AS totalPassenger,
    ( b.total_amount + b.markup_amount + b.markup_pay_amount ) AS totalAmount,
    b.dis_pay_met_amount AS discountAmount,
    ROUND( ( b.total_amount + b.markup_amount + b.markup_pay_amount ) - ( b.dis_pay_met_amount + b.commission_amount) , 2) AS paidAmount

FROM bookings b

LEFT JOIN
( SELECT su.id, su.first_name, su.last_name
	FROM stakeholder_users AS su
) su ON su.id = b.stakeholder_user_id

INNER JOIN
( SELECT bod.booking_id,
     (SELECT UPPER(c.cabin_name) FROM cabins AS c WHERE c.cabin_code = bod.cabin_code) AS className

 FROM booking_origin_destinations bod

 WHERE bod.parent_id IS NOT NULL
 AND CASE
    WHEN 'ALL' = :classType THEN  bod.cabin_code IN ('Y', 'F', 'C', 'S', 'P', 'J')
    WHEN 'ECONOMY' = :classType THEN bod.cabin_code = 'Y'
    WHEN 'FIRST' = :classType THEN bod.cabin_code = 'F'
    WHEN 'BUSINESS' = :classType THEN bod.cabin_code = 'C'
    END

 GROUP BY bod.booking_id

) bod ON bod.booking_id = b.id

WHERE b.status IN (1, 11, 10, 12)

-- CHECK USERS
AND CASE WHEN :userType = 'skyuser' THEN (b.stakeholder_user_id = :skyuserId AND b.stakeholder_company_id IS NULL)

    ELSE
        -- Condition for Skyowner
        CASE WHEN ( :userRole = 'ADMIN' AND :skystaffId = 0 ) THEN b.stakeholder_company_id = :companyId

            WHEN ( :userRole = 'ADMIN' AND :skystaffId > 0 ) THEN ( b.stakeholder_user_id = :skystaffId AND b.stakeholder_company_id = :companyId )

            ELSE
                b.stakeholder_user_id = :skyuserId AND b.stakeholder_company_id = :companyId
            END
    END

AND b.booking_type = 'flight'

AND ( Date(b.created_at) >= Date(:startDate) AND Date(b.created_at) <= Date(:endDate) )

AND CASE
    WHEN 'ALL' = :tripType THEN b.trip_type IN ('OneWay', 'Return', 'Other')
    WHEN 'ONEWAY' = :tripType THEN b.trip_type = 'OneWay'
    WHEN 'ROUND' = :tripType THEN b.trip_type = 'Return'
    WHEN 'MULTICITY' = :tripType THEN b.trip_type = 'Other'
    END


ORDER BY b.created_at DESC