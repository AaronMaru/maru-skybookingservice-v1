SELECT
	sc.id AS companyId,
	suc.stakeholder_user_id AS skyuserId,
	UPPER(suc.skyuser_role) AS skyuserRole,
	su.first_name AS firstName,
	su.last_name AS lastName,
	IFNULL( CONCAT( :STAFF_PROFILE, su.photo ) , CONCAT( :STAFF_PROFILE, 'default.png')) AS photo,
	su.user_code AS userCode,
	suc.created_at AS joinDate,
	suc.joinStatus,
	CASE WHEN ( suc.`status` = 1 ) THEN "OWNER"
         WHEN ( suc.`status` = 2 ) THEN  "STAFF"
    END AS position

FROM stakeholder_companies sc

-- Join table stakeholder user has companies
INNER JOIN
(   SELECT
		suc.stakeholder_company_id,
		suc.stakeholder_user_id,
		suc.created_at,
		suc.skyuser_role,
		suc.status,
		CASE
			WHEN (suc.join_status = 0 ) THEN  :INACTIVE
			WHEN (suc.join_status = 1 ) THEN :ACTIVE
			WHEN (suc.join_status = 2 ) THEN  :BANNED
		END AS joinStatus

	FROM stakeholder_user_has_companies suc

	-- Filter Feature condition
	WHERE CASE WHEN :action = 'FILTER' THEN

            CASE WHEN :role = 'ALL' THEN suc.skyuser_role IN ('admin', 'editor', 'moderator')
	             WHEN :role = 'ADMIN' THEN suc.skyuser_role = 'admin'
	             WHEN :role = 'EDITOR' THEN suc.skyuser_role = 'editor'
	             WHEN :role = 'MODERATOR' THEN suc.skyuser_role = 'moderator'
	            END

	        AND CASE WHEN :joinStatus = 'ACTIVE' THEN suc.`join_status` = 1
	                 WHEN :joinStatus = 'INACTIVE' THEN suc.`join_status` = 0
	                 WHEN :joinStatus = 'BANNED' THEN suc.`join_status` = 2
                     WHEN :joinStatus = 'ALL' THEN suc.`join_status` IN (0, 1, 2)
	            END

	        AND CASE WHEN :joinDate <> 'ALL' THEN DATE(suc.created_at) = DATE(:joinDate) ELSE suc.`join_status` IN (0, 1, 2) END
	        AND ( SELECT SUM(b.total_amount + b.markup_amount + b.markup_pay_amount)
                   FROM bookings b
                   WHERE b.stakeholder_company_id = suc.stakeholder_company_id
                   AND b.stakeholder_user_id = suc.stakeholder_user_id
               ) BETWEEN :startPRange AND :endPRange

	    END

) suc ON suc.stakeholder_company_id = sc.id

-- Join table stakeholder user
INNER JOIN
(   SELECT su.id, su.first_name, su.last_name, su.photo,su.user_code
	FROM stakeholder_users su
	WHERE su.`status` = 1
) su ON su.id = suc.stakeholder_user_id

WHERE sc.id = :companyId

UNION -- Search by join status

SELECT
	sc.id AS companyId,
	suc.stakeholder_user_id AS skyuserId,
	UPPER(suc.skyuser_role) AS skyuserRole,
	su.first_name AS firstName,
	su.last_name AS lastName,
	IFNULL( CONCAT( :STAFF_PROFILE, su.photo ) , CONCAT( :STAFF_PROFILE, 'default.png')) AS photo,
	su.user_code AS userCode,
	suc.created_at AS joinDate,
	suc.joinStatus,
	CASE WHEN ( suc.`status` = 1 ) THEN "OWNER"
         WHEN ( suc.`status` = 2 ) THEN  "STAFF"
    END AS position

FROM stakeholder_companies sc

-- Join table stakeholder user has companies
INNER JOIN
(   SELECT
		suc.stakeholder_company_id,
		suc.stakeholder_user_id,
		suc.created_at,
		suc.skyuser_role,
		suc.status,
		CASE
			WHEN (suc.join_status = 0 ) THEN :INACTIVE
			WHEN (suc.join_status = 1 ) THEN :ACTIVE
			WHEN (suc.join_status = 2 ) THEN :BANNED
		END AS joinStatus

	FROM stakeholder_user_has_companies suc

	-- Filter Feature condition
	WHERE CASE WHEN ( :action = 'SEARCH' ) THEN
                suc.skyuser_role LIKE '%' :keyword '%'
                OR Date(suc.created_at) LIKE '%' :keyword '%'
                OR CASE WHEN :keyword = 'active' THEN suc.`join_status` = 1
                    WHEN :keyword = 'inactive' THEN suc.`join_status` = 0
                    WHEN :keyword = 'banned' THEN suc.`join_status` = 2
                END
             ELSE
	            suc.`join_status` NOT IN (0, 1, 2)
	         END

) suc ON suc.stakeholder_company_id = sc.id

-- Join stakeholder user
INNER JOIN
(   SELECT su.id, su.first_name, su.last_name, su.photo,su.user_code
	FROM stakeholder_users su
	WHERE su.`status` = 1
) su ON su.id = suc.stakeholder_user_id

WHERE sc.id = :companyId

UNION -- With condition of stakeholder user

SELECT
	sc.id AS companyId,
	suc.stakeholder_user_id AS skyuserId,
	suc.skyuser_role AS skyuserRole,
	su.first_name AS firstName,
	su.last_name AS lastName,
	IFNULL( CONCAT( :STAFF_PROFILE, su.photo ), CONCAT( :STAFF_PROFILE, 'default.png') ) AS photo,
	su.user_code AS userCode,
	suc.created_at AS joinDate,
	suc.joinStatus,
	CASE WHEN ( suc.`status` = 1 ) THEN "OWNER"
         WHEN ( suc.`status` = 2 ) THEN  "STAFF"
    END AS position

FROM stakeholder_companies sc

-- Join table stakeholder user has companies
INNER JOIN
(   SELECT
		suc.stakeholder_company_id,
		suc.stakeholder_user_id,
		suc.created_at,
		suc.skyuser_role,
		suc.status,
		suc.join_status,
		CASE
			WHEN (suc.join_status = 0 ) THEN :INACTIVE
			WHEN (suc.join_status = 1 ) THEN :ACTIVE
			WHEN (suc.join_status = 2 ) THEN :BANNED
		END AS joinStatus

	FROM stakeholder_user_has_companies suc
	WHERE suc.`join_status` IN (0, 1, 2)

) suc ON suc.stakeholder_company_id = sc.id

-- Join table stakeholder user
INNER JOIN
(
    SELECT su.id, su.first_name, su.last_name, su.photo,su.user_code
	FROM stakeholder_users su
	WHERE su.`status` = 1
	AND CASE WHEN ( :action = 'SEARCH' ) THEN
	            ( CONCAT(su.first_name,' ',su.last_name) LIKE '%' :keyword '%'
                OR su.first_name LIKE '%' :keyword '%'
                OR su.last_name LIKE '%' :keyword '%'
                OR su.user_code LIKE '%' :keyword '%'
                )
	         ELSE
	            su.`status` <> 1
	         END

) su ON su.id = suc.stakeholder_user_id

WHERE sc.id = :companyId
ORDER BY CASE WHEN :orderBy = 'ASC' THEN firstName END ASC,
         CASE WHEN :orderBy = 'DESC' THEN firstName END DESC